Нереализовано или нужно изменить.

1. Время поиска гарантировано меньше N(O). Для этого нужно имплементировать структуру данных типа интервальное дерево или сходную с ней. Для для быстрого ответа на вопрос есть ли отрезок содержащий задынный можно было бы использовать std::map с ключом Interval, а вторым элементом хранить максимальную координату правого конца отрезков. Но для поиска отрезка нужно делать проход.

Для поиска Log(N) можно в нодах дерева хранить указатель на интервал с максимальной правой координатой. Но для добавления/удаления узла понадобится проходить все дерево для обновления этих данных, впрочем эту часть можно оптимизировать(проход делать от удаляемого/добавляемого элемента до первого с большей правой координатой).

2. Нужно ограничить время ожидания данных запроса от клиета, иначе есть возможность атаки на отказ в обслуживании путем создания "медленных" запросов.

3. Для описания ошибок в классе HttpException целесообразно использовать несколько vector-ов вместо map

4. Для большей наглядности переписать стейтмашину в классе HttpSimpleParser

5. Прогнать через cppcheck и valgrind

6. Интергационный тест
